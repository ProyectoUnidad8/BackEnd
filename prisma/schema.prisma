// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model PetAdoption {
  id Int @id  @default(autoincrement())
  name String
  raza String
  isAdopted  Boolean @default(false)
  solicitudes Solicitud []
}

model Solicitud {
  id Int @id @default(autoincrement())
  description String
  telefono String
  dni String
  status Boolean
  solicitud PetAdoption @relation(fields: [solicitudId], references: [id])
  solicitudId Int
}
 


model Profile {
  id      String     @id
  email   String     @unique
  name    String?  
  
  // Relación Perfil-Usuario
  user     Usuario?  
  userId   Int?      @unique

}

enum Role {
  ADMIN
  USER 
  AUX
}

model Usuario {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  password    String  @default("123456")
  name        String?  
  role        Role    @default(USER)
  
  // Relación Perfil-Usuario
  profile     Profile?  @relation(fields: [profileId], references: [id])
  profileId   String?  @unique

  // Relacion Usuario-Pet
  pet         Pet[]
}


model Pet {
  id           Int       @id @default(autoincrement())
  name         String
  breed        String? 
  age          Int
  numberChip   String? 
  category     String
  url_image    String   @default("https://img.freepik.com/vector-premium/perro-gracioso-dibujos-animados-hueso_29190-1660.jpg?w=2000")
  // Relacion Pet-Diagnostico
  diagnostic   Diagnostic[]  
  
  // Relacion Usuario-Pet
  owner        Usuario?   @relation(fields:[ownerId], references: [id], onDelete: Cascade)
  ownerId      Int  
}


model Diagnostic {
  id            Int     @id @default(autoincrement())  
  symptoms      String
  medication    String
  created_at    DateTime

  // Relacion Pet-Diagnostico
  pet           Pet  @relation(fields:[petId], references: [id])
  petId         Int
}